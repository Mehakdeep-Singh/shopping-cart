{"version":3,"sources":["types.js","components/util.js","components/Cart.js","actions/cartActions.js","actions/orderActions.js","components/Filter.js","actions/productActions.js","components/Products.js","reducers/orderReducer.js","reducers/productReducers.js","store.js","reducers/cartReducer.js","App.js","Hooks/useStateCallback.js","index.js"],"names":["FETCH_PRODUCTS","FILTER_PRODUCTS_BY_SIZE","ORDER_PRODUCTS_BY_PRICE","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER","CLEAR_ORDER","CLEAR_CART","formatCurrency","num","Number","toFixed","toLocaleString","connect","state","cartItems","cart","order","removeFromCart","items","product","dispatch","slice","filter","x","_id","type","payload","localStorage","setItem","JSON","stringify","createOrder","fetch","method","headers","body","then","res","console","log","json","data","clear","clearOrder","props","useState","name","email","address","showCheckOut","setState","handleChange","e","target","value","closeModal","length","className","isOpen","onRequestClose","onClick","total","map","count","title","left","cascade","item","src","image","alt","price","id","reduce","a","b","right","onSubmit","preventDefault","required","onChange","size","products","sort","filteredProducts","filteredItems","filterProducts","availableSizes","indexOf","sortProducts","sortedProducts","testobj","fetchProducts","addToCart","alreadyExist","forEach","push","modalState","modalSetState","useEffect","bottom","href","openModal","description","require","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","action","parse","getItem","applyMiddleware","thunk","App","initialState","cbref","useRef","useStateCallback","cb","current","alreadyInCart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86870f1a.chunk.js","sourcesContent":["export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE \";\nexport const ADD_TO_CART = \"ADD_TO_CART \";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART \";\nexport const CREATE_ORDER = \"CREATE_ORDER\";\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\nexport const CLEAR_CART = \"CREATE_CART\";","const formatCurrency = num => \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \" ;\n\nexport default formatCurrency;","import React, { useState } from 'react'\nimport formatCurrency from './util';\nimport Fade from \"react-reveal/Fade\"\nimport { connect } from 'react-redux';\nimport { removeFromCart } from '../actions/cartActions';\nimport { createOrder,clearOrder } from '../actions/orderActions';\nimport Modal from 'react-modal';\nimport Zoom from 'react-reveal/Zoom';\n\n const Cart = (props) => {\n    const { cartItems, order } = props;\n    const [state, setState] = useState({\n        name: \"\",\n        email: \"\",\n        address: \"\",\n        showCheckOut: false\n    })\n\n    const createOrder = (e) => {\n        e.preventDefault();\n        const order = {\n            name: state.name,\n            email: state.email,\n            address: state.address,\n            cartItems: cartItems,\n            total: cartItems.reduce((a, b) => a + b.price * b.count, 0)\n        }\n        props.createOrder(order);\n\n    }\n\n    const handleChange = (e) => {\n        setState({ ...state, [e.target.name]: e.target.value })\n\n    }\n    const closeModal = () => {\n        props.clearOrder();\n    }\n\n\n    return (\n        <>\n            <div>\n                {cartItems.length === 0 ? <div className=\"cart cart-header\">Cart is Empty</div>\n                    :\n                    <div className=\"cart cart-header\">You have {cartItems.length} in the cart</div>\n                }\n                {order && (\n                    <Modal\n                    isOpen={true}\n                    onRequestClose={closeModal}\n                    >\n                        <Zoom>\n                            <button className=\"close-modal\" onClick={closeModal} >x</button>\n                            <div className=\"order-details\">\n                                <h3 className=\"success-message\">Order has been placed</h3>\n                                <h2>Order No. {order._id} </h2>\n                                <ul>\n                                    <li>\n                                        <div>Name:</div>\n                                        <div> {order.name}  </div>\n                                    </li>\n                                    <li>\n                                        <div>Email:</div>\n                                        <div> {order.email}  </div>\n                                    </li>\n                                    <li>\n                                        <div>Address:</div>\n                                        <div> {order.address}  </div>\n                                    </li>\n                                    <li>\n                                        <div>Address:</div>\n                                        <div> {formatCurrency(order.total)}  </div>\n                                    </li>\n\n                                    <li>\n                                        <div>Cart Items</div>\n                                        <div> {order.cartItems.map(x => (\n                                            <div> {x.count} {\"X\"} {x.title} </div>\n                                        ))}  </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </Zoom>\n                    </Modal>\n                )}\n            </div>\n            <div>\n                <div className=\"cart\">\n                    <Fade left cascade>\n                        <ul className=\"cart-items\">\n                            {cartItems.map((item) => (\n                                <li key={item.id}>\n                                    <div>\n                                        <img src={item.image} alt={cartItems.title}></img>\n                                    </div>\n                                    <div>\n                                        <div>{item.title}</div>\n                                        <div className=\"right\">{formatCurrency(item.price)} x {item.count} {\" \"}</div>\n                                        <button onClick={() => props.removeFromCart(props.cartItems,item)}>\n                                            Remove\n                                </button>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    </Fade>\n                </div>\n                {cartItems.length !== 0 && (\n                    <div>\n                        <div className=\"cart\">\n                            <div className=\"total\">\n                                <div>\n                                    {formatCurrency(cartItems.reduce((a, b) => a + b.price * b.count, 0))}\n                                </div>\n                                <button className=\"primary button\" onClick={() => setState({ showCheckOut: true })}>\n                                    Proceed\n                    </button>\n                            </div>\n                        </div>\n                        {state.showCheckOut && (\n                            <div className=\"cart\">\n                                <Fade right cascade>\n                                    <form onSubmit={createOrder}>\n                                        <ul className=\"form-container\">\n                                            <li>\n                                                <label>Email</label>\n                                                <input name=\"email\" type=\"email\" required onChange={handleChange}></input>\n                                            </li>\n                                            <li>\n                                                <label>Name</label>\n                                                <input name=\"name\" type=\"text\" required onChange={handleChange}></input>\n                                            </li>\n                                            <li>\n                                                <label>Address</label>\n                                                <input name=\"address\" type=\"text\" required onChange={handleChange}></input>\n                                            </li>\n                                            <li>\n                                                <button className=\"button primary\" type=\"submit\">Checkout</button>\n                                            </li>\n                                        </ul>\n                                    </form>\n                                </Fade>\n\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\n\nexport default connect(state => ({\n    cartItems:state.cart.cartItems,\n    order:state.order.order\n}),\n{removeFromCart,createOrder, clearOrder}\n)(Cart);","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (items,product) => (dispatch) => {\n    const cartItems = items.slice();\n    let alreadyExist = false;\n    cartItems.forEach(x => {\n        if(x._id === product._id){\n            alreadyExist = true;\n            x.count ++;\n        }\n    });\n    if(!alreadyExist){\n        cartItems.push({...product, count : 1});\n    }\n    dispatch({\n        type:ADD_TO_CART,\n        payload:{cartItems}\n    })\n    localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));\n}\n\nexport const removeFromCart = (items,product) => (dispatch) => {\n    const cartItems = items.slice().filter(\n        x => x._id !== product._id\n    );\n    dispatch({\n        type: REMOVE_FROM_CART,\n        payload:{cartItems}\n    })\nlocalStorage.setItem(\"cartItems\",JSON.stringify(cartItems));\n\n}","import { CLEAR_CART, CLEAR_ORDER, CREATE_ORDER } from \"../types\";\n\nexport const createOrder = (order) => (dispatch) => {\n    fetch(\"/api/orders\", {\n        method:\"POST\",\n        headers:{\n            \"Content-Type\":\"application/json\",\n        },\n        body:JSON.stringify(order),\n    })\n        .then((res) => {\n            console.log(res);\n            return res.json()})\n        .then((data) => {\n            dispatch({type: CREATE_ORDER, payload: data});\n            localStorage.clear(\"cartItems\");\n            dispatch({\n                type:CLEAR_CART\n            })\n        });\n\n        \n}\n\nexport const clearOrder = () => (dispatch) => {\n    dispatch({type:CLEAR_ORDER}); \n}","import React from 'react'\nimport {filterProducts,sortProducts} from '../actions/productActions'\nimport {  connect } from \"react-redux\";\n\n const Filter = (props) => {\n    return (\n        <div className=\"filter\">\n            <div className=\"filter-result\">{props.count}{\" \"}Products</div>\n            <div className=\"filter-sort\">\n                Order \n                <select value={props.sort} onChange={(e) => {props.sortProducts(props.filteredProducts,e.target.value)}}>\n                <option value=\"latest\">Latest</option>\n                <option value=\"lowest\">Lowest</option>\n                <option value=\"highest\">highest</option>\n                </select>\n            </div>\n            <div className=\"filter-size\">\n                Filter\n                <select value={props.size} onChange={e => props.filterProducts(props.filteredProducts,e.target.value)}>\n                    <option value=\"\">ALL</option>\n                    <option value=\"XS\">XS</option>\n                    <option value=\"S\">S</option>\n                    <option value=\"M\">M</option>\n                    <option value=\"L\">L</option>\n                    <option value=\"XL\">XL</option>\n                    <option value=\"XXL\">XXL</option>\n                </select>\n            </div>\n\n            \n        </div>\n    )\n}\n\nexport default connect((state) => {\n    console.log(\"state in filter\",state);\n    return{\n    size:state.products.size,\n    sort:state.products.sort,\n    products:state.products.items,\n    filteredProducts:state.products.filteredItems\n}\n},{filterProducts,sortProducts})(Filter);","import { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"../types\";\n\nexport const fetchProducts = () => async (dispatch) => {\n    const res = await fetch(\"/api/products\");\n    const data = await res.json();\n    dispatch({\n        type: FETCH_PRODUCTS,\n        payload: data,\n    })\n}\n\nexport const filterProducts = (products, size) => (dispatch) => {\n    dispatch({\n        type: FILTER_PRODUCTS_BY_SIZE,\n        payload: {\n            size: size,\n            items:\n                size === \"\"\n                    ?\n                    products\n                    :\n                    products.filter(x => x.availableSizes.indexOf(size )>= 0)\n        }\n\n    })\n}\n\nexport const sortProducts = (filteredProducts, sort) => (dispatch) => {\n    const sortedProducts = filteredProducts.slice();\n    if (sort === \"latest\") {\n        sortedProducts.sort((a, b) => (a._id > b._id ? 1 : -1))\n    }\n    else {\n        sortedProducts.sort((a, b) => (\n            sort === \"lowest\" ?\n                a.price > b.price ? 1 : -1\n                :\n                a.price > b.price ? -1 : 1\n        ))\n    };\n    dispatch({\n        type: ORDER_PRODUCTS_BY_PRICE,\n        payload: {\n            sort: sort,\n            items: sortedProducts\n        }\n    })\n}","import React, { useEffect, useState } from 'react'\nimport formatCurrency from './util'\nimport Fade from \"react-reveal/Fade\"\nimport Zoom from \"react-reveal/Zoom\"\nimport Modal from \"react-modal\"\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../actions/productActions';\nimport { addToCart } from '../actions/cartActions';\n\nfunction Products(props) {\n    const [modalState, modalSetState] = useState(null)\n\n    useEffect(() => {\n        props.fetchProducts();\n    },[])\n\n    const openModal = (product) => {\n        modalSetState(product);\n    }\n\n    const closeModal = () => {\n        modalSetState(null);\n    }\n\n    return (\n        <div>\n            <Fade bottom cascade>\n                { \n                    !props.products ? (<div>...loading</div>)\n                        : \n                        // (<div>...loading</div>)\n                        (<ul className=\"products\">\n                            {props.products.map(product =>\n                                <li key={product._id}>\n                                    <div className=\"product\">\n                                        <a href={\"#\" + product._id} onClick={() => openModal(product)}>\n                                            <img src={product.image} alt={product.title} />\n                                            <p>\n                                                {product.title}\n                                            </p>\n                                        </a>\n                                        <div className=\"product-price\">\n                                            <div>\n                                                {formatCurrency(product.price)}\n                                            </div>\n                                            <button onClick={() => props.addToCart(props.cartItems,product)} className=\"button primary\">\n                                                Add to cart\n                                            </button>\n                                        </div>\n                                    </div>\n\n                                </li>)}\n                        </ul>\n                )\n                }\n                 </Fade>\n            {modalState && (\n                <Modal isOpen={true} onRequestClose={closeModal}>\n                    <Zoom>\n                        <div>Modal</div>\n                        <button onClick={closeModal} className=\"close-modal\">X</button>\n                        <div className=\"product-details\">\n                            <img src={modalState.image} alt={modalState.title}></img>\n                            <div className=\"product-details-description\">\n                                <p>\n                                    <strong>{modalState.title}</strong>\n                                </p>\n                                <p>\n                                    {modalState.description}\n                                </p>\n                                <p>\n                                    Available Sizes {\" \"}\n                                    {modalState.availableSizes.map(x => (\n                                        <span>\n                                            {\" \"}\n                                            <button className=\"button \">{x}</button>\n                                        </span>\n                                    ))}\n                                </p>\n                                <div className=\"product-price\">\n                                    <div>{formatCurrency(modalState.price)}</div>\n                                    <button\n                                        className=\"button primary\"\n                                        onClick={() => {\n                                            props.addToCart(modalState);\n                                            closeModal();\n                                        }}\n                                    >\n                                        Add to Cart\n                                    </button>\n\n                                </div>\n                            </div>\n                        </div>\n\n                    </Zoom>\n                </Modal>\n            )}\n\n        </div>\n    )\n}\nlet testobj = connect((state) => { \n    return{products: state.products.filteredItems,\n            cartItems:state.cart.cartItems\n    }}\n, {\n    fetchProducts,\n    addToCart\n  }\n  )(Products);\n    \n\nexport default testobj","const { CREATE_ORDER, CLEAR_ORDER } = require(\"../types\");\n\nexport const orderReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_ORDER:\n            return {\n                order: action.payload\n            };\n        case CLEAR_ORDER:\n            return { order: null }\n        default:\n            return state;\n    }\n}","// import { act } from \"react-dom/test-utils\";\n\nconst { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } = require(\"../types\");\n\nexport const productReducer = (state = {}, action) => {\n    console.log(\"in reducerrrrrrrrrrr\")\n    switch (action.type) {\n        case FILTER_PRODUCTS_BY_SIZE:\n            return {\n                ...state,\n                filteredItems: action.payload.items,\n                size: action.payload.size\n            };\n        case ORDER_PRODUCTS_BY_PRICE:\n            return{\n                ...state,\n                sort:action.payload.sort,\n                filteredItems: action.payload.items\n            }   \n        case FETCH_PRODUCTS:\n            return { items: action.payload , filteredItems:action.payload}\n        default:\n            return state;\n    }\n}","import {createStore,compose, applyMiddleware,combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducer';\nimport { orderReducer } from './reducers/orderReducer';\nimport { productReducer } from './reducers/productReducers';\n\nconst initialState = {};\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(combineReducers({\n    products:productReducer,\n    cart:cartReducer,\n    order:orderReducer\n}),\ninitialState,\ncomposeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const cartReducer = (state = {cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") },\n    action) => {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                cartItems: action.payload.cartItems\n            };\n        case REMOVE_FROM_CART:\n            return{\n                cartItems:action.payload.cartItems\n            };    \n        default:\n            return state;\n    }\n}","import React, { useState, } from \"react\"\nimport { Provider } from \"react-redux\";\nimport Cart  from \"./components/Cart\";\nimport Filter from \"./components/Filter\";\nimport Products from \"./components/Products\"\nimport data from \"./data.json\"\nimport { useStateCallback } from \"./Hooks/useStateCallback\"\n\nimport store from './store';\n\nfunction App() {\n\n  const [state, setState] = useStateCallback({\n    products: data.products,\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    size: \"\",\n    sort: \"\",\n  })\n  // console.log(state);\n  const addToCart = (product) => {\n    const cartItems = state.cartItems.slice();\n    let alreadyInCart = false;\n    cartItems.forEach(item => {\n      if (item._id === product._id) {\n        // item.count ? item.count ++ : item.count = 1;\n        item.count++;\n        alreadyInCart = true;\n      }\n    })\n    if (!alreadyInCart) {\n      cartItems.push({ ...product, count: 1 })\n    }\n    setState({ ...state, cartItems: cartItems })\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n\n\n\n  }\n\n  // const filterProducts = (event) => {\n  //   // console.log(event.target.value)\n  //   if (event.target.value === \"\")\n  //     setState({\n  //       ...state,\n  //       size: event.target.value,\n  //       products: data.products\n  //     })\n  //   else\n  //     setState({\n  //       ...state,\n  //       size: event.target.value,\n  //       products: data.products.filter(product => product.availableSizes.indexOf(event.target.value) >= 0)\n  //     })\n\n  // }\n  // const sortProducts = (event) => {\n  //   const sort = event.target.value;\n  //   setState({\n  //     ...state,\n  //     sort: sort,\n  //     products: state.products.slice().sort((a, b) => (\n  //       sort === \"lowest\"\n  //         ?\n  //         ((a.price < b.price) ?\n  //           -1 : 1)\n  //         :\n  //         sort === \"highest\"\n  //           ?\n  //           ((a.price > b.price)\n  //             ? -1 : 1) :\n  //           ((a._id < b._id)\n  //             ?\n  //             -1 : 1)\n\n\n  //     ))\n  //   })\n  // }\n\n  const removeFromCart = (product) => {\n\n    setState({\n      ...state,\n      cartItems: state.cartItems.filter(x => (x._id !== product._id))\n    }, (state) => { localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems)); });\n    // localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n\n  }\n\n  const createOrder = (order) => {\n    alert(\"Need to save order \" + order.name)\n  }\n  return (\n    <Provider store={store}>\n      <div className=\"grid-container\">\n        <header className=\"\">\n          <a href=\"/\">React Shopping Cart</a>\n        </header>\n        <main>\n          <div className=\"content\">\n            <div className=\"main\">\n              <Filter\n              //  count={state.products.length}\n              //   size={state.size}\n              //   sort={state.sort}\n              //   filterProducts={filterProducts}\n              //   sortProducts={(e) => sortProducts(e)}\n\n              >\n\n              </Filter>\n              <Products\n                addToCart={(product) => { addToCart(product) }}\n                // products={state.products}\n                >\n\n                </Products>\n            </div>\n            <div className=\"sidebar\">\n              <Cart\n                \n              >\n                {/* cartItems={state.cartItems}\n                createOrder={createOrder}\n                removeFromCart={(i) => removeFromCart(i)} */}\n              </Cart>\n            </div>\n\n          </div>\n        </main>\n        <footer>\n          All right is reserved\n      </footer>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React, { useRef, useState, useEffect } from 'react'\n\nexport const useStateCallback = (initialState) => {\n    const [state,setState] = useState(initialState);\n    const cbref = useRef(null);\n\n    const useStateCallback = (state,cb) => {\n        cbref.current = cb;\n        setState(state);\n    }\n\n    useEffect(() => {\n        if(cbref.current){\n            cbref.current(state);\n        }\n    }, [state])\n    return [state,useStateCallback]\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}